data = readRDS("FSB_BI_Survey_2019_2021.rds")
head(data)
data.desribe()
summary(data)
str(data)
install.packages("tidyverse")
library('tidyverse')
glimpse(data)
glimpse(data)
chooseCRANmirror(graphics = FALSE)
chooseCRANmirror(graphics = FALSE)
knitr::opts_chunk$set(echo = TRUE)
n_levels(data$survey_company)
n_distinct(data$survey_company)
str(data)
clean_data = data[c('survey_internships','survey_offers','nmajor','major1','major2','Gender','GPA.Range','survey_plans','survey_salary')]
colSums(is.na(clean_data))
clean_data$survey_plans <- ifelse(is.na(clean_data$survey_plans), "No Response", clean_data$survey_plans)
clean_data$survey_plans <- ifelse(is.na(clean_data$survey_plans), "No Response", clean_data$survey_plans)
colSums(is.na(clean_data))
na.omit(clean_data$survey_offers)
colSums(is.na(clean_data))
complete_rows <- complete.cases(clean_data$survey_offers, clean_data$survey_internships)
clean_data <- clean_data[complete_rows, ]
colSums(is.na(clean_data))
sessionInfo()
df <- clean_data
cd = clean_data
rate=round(100*nrow(cd)/800,0)
cd = clean_data
saveRDS(data, "clean_data.rds")
cd = readRDS("clean_data.rds")
knitr::opts_chunk$set(echo = TRUE)
sessionInfo()
data = readRDS("FSB_BI_Survey_2019_2021.rds")
head(data)
library('tidyverse')
str(data)
clean_data = data[c('survey_internships','survey_offers','nmajor','major1','major2','Gender','GPA.Range','survey_plans','survey_salary')]
colSums(is.na(clean_data))
clean_data$survey_plans <- ifelse(is.na(clean_data$survey_plans), "No Response", clean_data$survey_plans)
colSums(is.na(clean_data))
complete_rows <- complete.cases(clean_data$survey_offers, clean_data$survey_internships)
clean_data <- clean_data[complete_rows, ]
colSums(is.na(clean_data))
saveRDS(clean_data, "clean_data.rds")
cd = readRDS("clean_data.rds")
p=ggplot(cd,aes(reorder(survey_internships,survey_internships,function(x)-length(x))))+
geom_bar(color="steelblue",fill="steelblue")+
xlab("Internship Status")+
ylab("Number of Responses")+
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
sessionInfo()
data = readRDS("FSB_BI_Survey_2019_2021.rds")
head(data)
library('tidyverse')
str(data)
clean_data = data[c('survey_internships','survey_offers','nmajor','major1','major2','Gender','GPA.Range','survey_plans','survey_salary')]
colSums(is.na(clean_data))
clean_data$survey_plans <- ifelse(is.na(clean_data$survey_plans), "No Response", clean_data$survey_plans)
colSums(is.na(clean_data))
complete_rows <- complete.cases(clean_data$survey_offers, clean_data$survey_internships)
clean_data <- clean_data[complete_rows, ]
colSums(is.na(clean_data))
saveRDS(clean_data, "clean_data.rds")
View(clean_data)
View(data)
View(cd)
new_df <- original_df %>%
mutate(at_least_one_offer = ifelse(survey_offers > 0, 1, 0))
new_df <- cd %>%
mutate(at_least_one_offer = ifelse(survey_offers > 0, 1, 0))
pacman::p_load(tidyverse, #for data manipulation
plotly, #for interactive plots
flexdashboard, #to make a dashboard
fontawesome, #for icons
DT, #for better tables
dplyr
)
new_df <- cd %>%
mutate(at_least_one_offer = ifelse(survey_offers > 0, 1, 0))
offer_rate <- offers_by_major %>%
group_by(major1) %>%
summarize(offer_rate = mean(at_least_one_offer))
offers_by_major <- cd %>%
mutate(at_least_one_offer = ifelse(survey_offers > 0, 1, 0))
offer_rate <- offers_by_major %>%
group_by(major1) %>%
summarize(offer_rate = mean(at_least_one_offer))
ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity") +
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme_bw()
ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.7) +  # Adjust the width here
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity", fill = "steelblue", width = 1.5) +  # Adjust the width here
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.7) +  # Adjust the width here
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
theme(axis.text.x = element_text(angle = 45, hjust = 1)
theme_bw() +
offers_by_major <- cd %>%
mutate(at_least_one_offer = ifelse(survey_offers > 0, 1, 0))
offer_rate <- offers_by_major %>%
group_by(major1) %>%
summarize(offer_rate = mean(at_least_one_offer))
my_plot <- ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
labs(title = "Offer Rate by Major",
y = "Offer Rate") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)
ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
p = ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
internships_by_major <- cd %>%
mutate(at_least_one_internship = ifelse(survey_internships > 0, 1, 0))
internship_rate <- internships_by_major %>%
group_by(major1) %>%
summarize(internship_rate = mean(at_least_one_internship))
p = ggplot(offer_rate, aes(x = major1, y = internship_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Internship Rate by Major",
x = "Major",
y = "Internship Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
p = ggplot(offer_rate, aes(x = major1, y = internship_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Internship Rate by Major",
x = "Major",
y = "Internship Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
p = ggplot(offer_rate, aes(x = major1, y = internship_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Internship Rate by Major",
x = "Major",
y = "Internship Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
p = ggplot(offer_rate, aes(x = major1, y = internship_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Internship Rate by Major",
x = "Major",
y = "Internship Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
geom_bar(stat = "identity", fill = "steelblue") +
x = "Major",
theme_bw() +
ggplotly(p)
internships_by_major <- cd %>%
mutate(at_least_one_internship = ifelse(survey_internships > 0, 1, 0))
internship_rate <- internships_by_major %>%
group_by(major1) %>%
summarize(internship_rate = mean(at_least_one_internship))
p <- ggplot(internship_rate, aes(x = major1, y = internship_rate)) +
labs(title = "Internship Rate by Major",
y = "Internship Rate") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)
ggplotly(p)
p <- ggplot(internship_rate, aes(x = major1, y = internship_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Internship Rate by Major",
x = "Major",
y = "Internship Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
#package intialization
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, #for data manipulation
plotly, #for interactive plots
flexdashboard, #to make a dashboard
fontawesome, #for icons
DT, #for better tables
dplyr
)
#read in data
cd = readRDS("clean_data.rds")
cd$offer_status <- ifelse(cd$survey_offers > 0, "Received Offer", "No Offer")
# Create the clustered bar plot with facet_wrap
ggplot(cd, aes(x = survey_internships, fill = offer_status)) +
geom_bar(position = "dodge") +
labs(title = "Job Offers vs. Internships by Major",
x = "Number of Internships",
y = "Number of Students") +
facet_wrap(~ nmajor, ncol = 2) +
scale_fill_manual(values = c("Received Offer" = "green", "No Offer" = "red"))
# Create the bar chart
bar_chart <- ggplot(cd, aes(x = internship_status, fill = job_offer_status)) +
geom_bar(position = "dodge") +
labs(title = "Job Offers vs. Internships",
x = "Internship Status",
y = "Number of Students") +
scale_fill_manual(values = c("Received Offer" = "steelblue", "Zero Offers" = "red"))
cd$internship_status <- ifelse(cd$survey_internships > 0, "Had Internship", "Zero Internships")
# Create the bar chart
bar_chart <- ggplot(cd, aes(x = internship_status, fill = job_offer_status)) +
geom_bar(position = "dodge") +
labs(title = "Job Offers vs. Internships",
x = "Internship Status",
y = "Number of Students") +
scale_fill_manual(values = c("Received Offer" = "steelblue", "Zero Offers" = "red"))
# Create the bar chart
bar_chart <- ggplot(cd, aes(x = internship_status, fill = job_offer_status)) +
geom_bar(position = "dodge") +
labs(title = "Job Offers vs. Internships",
x = "Internship Status",
y = "Number of Students") +
scale_fill_manual(values = c("Zero Offers" = "red", "Received Offer" = "steelblue"))
cd$internship_status <- ifelse(cd$survey_internships > 0, "Had Internship", "Zero Internships")
# Create the bar chart
bar_chart <- ggplot(cd, aes(x = internship_status, fill = job_offer_status)) +
geom_bar(position = "dodge") +
labs(title = "Job Offers vs. Internships",
x = "Internship Status",
y = "Number of Students") +
scale_fill_manual(values = c("Zero Offers" = "red", "Received Offer" = "steelblue"))
"Received Offer"
"Received Offer"
"Received Offer"
sessionInfo()
pacman::p_load(
tidyverse,      # Data manipulation and visualization
plotly,         # Interactive plots
flexdashboard,  # Dashboard creation
fontawesome,    # For icons
DT,             # Enhanced tables
dplyr,
gridExtra
)
#number of students with each number of internships
p=ggplot(cd,aes(survey_internships))+
geom_bar(color="steelblue",fill="steelblue")+
xlab("Internship Status")+
ylab("Number of Responses")+
theme_bw()
ggplotly(p)
#number of students with each number of internships
p=ggplot(cd,aes(survey_internships))+
geom_bar(color="steelblue",fill="steelblue")+
xlab("Number of Internships")+
ylab("Number of Responses")+
theme_bw()
ggplotly(p)
internship_rate <- internships_by_major %>%
group_by(major1) %>%
summarize(internship_rate = mean(at_least_one_internship))
internships_by_major <- cd %>%
mutate(at_least_one_internship = ifelse(survey_internships > 0, 1, 0))
internship_rate <- internships_by_major %>%
group_by(major1) %>%
summarize(internship_rate = mean(at_least_one_internship))
p <- ggplot(internship_rate, aes(x = major1, y = internship_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Internship Rate by Major",
x = "Major",
y = "Internship Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
```{r,echo=FALSE}
offers_by_major <- cd %>%
mutate(at_least_one_offer = ifelse(survey_offers > 0, 1, 0))
offer_rate <- offers_by_major %>%
group_by(major1) %>%
summarize(offer_rate = mean(at_least_one_offer))
p = ggplot(offer_rate, aes(x = major1, y = offer_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Offer Rate by Major",
x = "Major",
y = "Offer Rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p)
cd$internship_status <- ifelse(cd$survey_internships > 0, "Had Internship", "Zero Internships")
cd$job_offer_status <- ifelse(cd$survey_offers > 0, "Received Offer", "Zero Offers")
# Reorder the levels of the "job_offer_status" factor
cd$job_offer_status <- factor(cd$job_offer_status, levels = c("Zero Offers", "Received Offer"))
# Create the bar chart
bar_chart <- ggplot(cd, aes(x = internship_status, fill = job_offer_status)) +
geom_bar(position = "dodge") +
labs(title = "Job Offers vs. Internships",
x = "Internship Status",
y = "Number of Students") +
scale_fill_manual(values = c("Received Offer" = "steelblue", "Zero Offers" = "red"))
ggplotly(bar_chart)
cd$offer_status <- ifelse(cd$survey_offers > 0, "Received Offer", "No Offer")
# Create the clustered bar plot with facet_wrap
p <- ggplot(cd, aes(x = factor(survey_internships), fill = offer_status)) +
geom_bar(position = "dodge") +
labs(title = "Job Offers vs. Internships by Major",
x = "Number of Internships",
y = "Number of Students") +
facet_wrap(~ major1, ncol = 2) +
scale_fill_manual(values = c("Received Offer" = "steelblue", "No Offer" = "red"))
# Convert the ggplot to an interactive plot
ggplotly(p)
